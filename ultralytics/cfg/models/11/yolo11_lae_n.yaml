# Ultralytics YOLO ðŸš€, AGPL-3.0 license
# YOLO11 object detection model with P3-P5 outputs. For Usage examples see https://docs.ultralytics.com/tasks/detect

# Parameters
nc: 80 # number of classes
scales: # model compound scaling constants, i.e. 'model=yolo11n.yaml' will call yolo11.yaml with scale 'n'
  # [depth, width, max_channels]
  n: [0.50, 0.25, 1024] # summary: 319 layers, 2624080 parameters, 2624064 gradients, 6.6 GFLOPs
  s: [0.50, 0.50, 1024] # summary: 319 layers, 9458752 parameters, 9458736 gradients, 21.7 GFLOPs
  m: [0.50, 1.00, 512] # summary: 409 layers, 20114688 parameters, 20114672 gradients, 68.5 GFLOPs
  l: [1.00, 1.00, 512] # summary: 631 layers, 25372160 parameters, 25372144 gradients, 87.6 GFLOPs
  x: [1.00, 1.50, 512] # summary: 631 layers, 56966176 parameters, 56966160 gradients, 196.0 GFLOPs

# YOLO11n backbone
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [16, 3, 2]] # 0-P1/2 (64*0.25=16)
  - [-1, 1, LAE, []] # 1-P2/4
  - [-1, 1, C3k2, [64, False, 0.25]] # 2 (256*0.25=64, depth*0.5=1)
  - [-1, 1, LAE, []] # 3-P3/8
  - [-1, 1, C3k2, [128, False, 0.25]] # 4 (512*0.25=128, depth*0.5=1)
  - [-1, 1, LAE, []] # 5-P4/16
  - [-1, 1, C3k2, [128, True]] # 6 (512*0.25=128, depth*0.5=1)
  - [-1, 1, LAE, []] # 7-P5/32
  - [-1, 1, C3k2, [256, True]] # 8 (1024*0.25=256, depth*0.5=1)
  - [-1, 1, SPPF, [256, 5]] # 9 (1024*0.25=256)
  - [-1, 1, C2PSA, [256]] # 10 (1024*0.25=256, depth*0.5=1)

# YOLO11n head
head:
  - [[2, 4, 6, 10], 1, Detect_AFPN4, [nc, 128]]  # Detect(P2, P3, P4, P5)
